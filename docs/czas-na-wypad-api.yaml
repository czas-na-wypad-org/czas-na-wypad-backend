openapi: 3.0.1
info:
  title: "Documentation for czas-na-wypad-backend"
  version: '0.0.1'
servers:
  - url: http://localhost:8080
    description: Generated server url
security:
  - BearerAuth: []
paths:
  /attractions:
    get:
      tags:
        - attraction-controller
      operationId: getAllAttractions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttractionDTO'
              example:
                name: Pomnik
                type: MONUMENT
                priceLevel: LOW
                postCode: "00-001"
                city: "Warsaw"
                street: "ul. Warszawska"
                buildingNumber: "1"
                localNumber: null
                longitude: 34.458
                latitude: 12.319
                phone: "+48221000000"
                email: "example@email.com"
                website: "https://example.attraction.website/attraction"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              example:
                statusCode: 403
                message: 'Access to this resource is forbidden'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              example:
                statusCode: 500
                message: "Something went wrong. Try again later."

components:
  schemas:
    AttractionDTO:
      type: object
      properties:
        name:
          type: string
          description: Name of the attraction
          maxLength: 200
          minLength: 1
        type:
          type: string
          description: Type of the attraction
          example: restaurant
          minLength: 1
        priceLevel:
          type: string
          description: Symbolizes the prices level associated with this place.
          example: high
          minLength: 1
        description:
          type: string
          description: General description of the attraction
          minLength: 1
        postCode:
          type: string
          description: Location post code of the attraction
          minLength: 1
        city:
          type: string
          description: City in which the attraction is located
          minLength: 1
        street:
          type: string
          description: Street name where the attraction is located
          minLength: 1
        buildingNumber:
          type: string
          description: Building number of the attraction
          minLength: 1
        localNumber:
          type: string
          description: (If applicable) Premises number of the attraction
          minLength: 1
        longitude:
          type: number
          description: Longitude of where the attraction is located at (used for locating attractions)
          format: double
        latitude:
          type: number
          description: Latitude of where the attraction is located at (used for locating attractions)
          format: double
        phone:
          type: string
          description: Phone number of the company which is responsible for the attraction
          minLength: 1
        email:
          type: string
          description: Email of the company which is responsible for the attraction
          minLength: 1
        website:
          type: string
          description: Company's website that talks about the attraction
          minLength: 1
    ErrorResponseDTO:
      type: object
      properties:
        statusCode:
          type: integer
          description: HTTP Status code value of the error
          example: 401
        message:
          type: string
          description: Error message
          example: 'Unauthorized'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: Bearer
